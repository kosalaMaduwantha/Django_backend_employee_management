# Generated by Django 3.1 on 2020-10-17 19:36

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='budget',
            fields=[
                ('budgetID', models.CharField(max_length=10, primary_key=True, serialize=False, unique=True)),
                ('timeperiod', models.DateField(auto_now=True)),
                ('status', models.CharField(max_length=10)),
                ('amount', models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name='customer',
            fields=[
                ('cID', models.CharField(max_length=10, primary_key=True, serialize=False, unique=True)),
                ('fName', models.CharField(max_length=20)),
                ('lName', models.CharField(max_length=20)),
                ('nic', models.CharField(max_length=20)),
                ('email', models.CharField(max_length=30)),
                ('phone', models.CharField(max_length=20)),
                ('country', models.CharField(max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='employee',
            fields=[
                ('empID', models.CharField(max_length=50, primary_key=True, serialize=False, unique=True)),
                ('fname', models.CharField(max_length=100, unique=True)),
                ('lname', models.CharField(max_length=100)),
                ('gender', models.CharField(max_length=10)),
                ('nic', models.CharField(max_length=20, unique=True)),
                ('dob', models.DateField()),
                ('joined_date', models.DateField()),
                ('address', models.CharField(max_length=400)),
                ('edu_qualifications', models.CharField(max_length=400)),
                ('prof_edu_qualifications', models.CharField(max_length=400)),
                ('designation', models.CharField(max_length=100)),
                ('department', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='event',
            fields=[
                ('eID', models.AutoField(max_length=10, primary_key=True, serialize=False, unique=True)),
                ('paid_status', models.CharField(max_length=10)),
                ('e_description', models.CharField(max_length=100)),
                ('e_date', models.DateField()),
                ('date_time', models.TimeField()),
                ('pack_offer_type', models.CharField(max_length=20)),
                ('cID', models.ForeignKey(default='', on_delete=django.db.models.deletion.DO_NOTHING, to='rock_fort_backend.customer')),
            ],
        ),
        migrations.CreateModel(
            name='event_offer',
            fields=[
                ('oID', models.CharField(max_length=10, primary_key=True, serialize=False, unique=True)),
                ('e_o_description', models.CharField(max_length=100)),
                ('e_price', models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name='event_package',
            fields=[
                ('pID', models.CharField(max_length=10, primary_key=True, serialize=False, unique=True)),
                ('p_category', models.CharField(max_length=20)),
                ('e_p_description', models.CharField(max_length=100)),
                ('e_p_price', models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name='income',
            fields=[
                ('income_id', models.CharField(max_length=10, primary_key=True, serialize=False, unique=True)),
                ('date_time', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='inventory',
            fields=[
                ('itemID', models.CharField(max_length=10, primary_key=True, serialize=False, unique=True)),
                ('product_name', models.CharField(max_length=100)),
                ('category', models.CharField(max_length=100)),
                ('department', models.CharField(max_length=100)),
                ('quantity', models.IntegerField()),
                ('unit_price', models.FloatField()),
                ('threshold', models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name='reservation',
            fields=[
                ('res_id', models.CharField(max_length=10, primary_key=True, serialize=False, unique=True)),
                ('room_type', models.CharField(max_length=20)),
                ('check_in_date', models.DateField()),
                ('check_out_date', models.DateField()),
                ('adults', models.CharField(max_length=5, validators=[django.core.validators.RegexValidator('^\\d{1,10}$')])),
                ('children', models.CharField(max_length=5, validators=[django.core.validators.RegexValidator('^\\d{1,10}$')])),
                ('date_time', models.DateTimeField(auto_now=True)),
                ('paid_status', models.CharField(max_length=10)),
                ('cID', models.ForeignKey(default='', on_delete=django.db.models.deletion.DO_NOTHING, to='rock_fort_backend.customer')),
            ],
        ),
        migrations.CreateModel(
            name='room',
            fields=[
                ('room_id', models.CharField(max_length=50, primary_key=True, serialize=False, unique=True, validators=[django.core.validators.RegexValidator('^\\d{1,10}$')])),
                ('floor', models.CharField(max_length=100, validators=[django.core.validators.RegexValidator('^\\d{1,10}$')])),
                ('room_type', models.CharField(max_length=50)),
                ('description', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='room_offer',
            fields=[
                ('ro_id', models.CharField(max_length=10, primary_key=True, serialize=False, unique=True)),
                ('ro_description', models.CharField(max_length=100)),
                ('ro_price', models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name='supplier',
            fields=[
                ('supplierID', models.CharField(max_length=10, primary_key=True, serialize=False, unique=True)),
                ('s_company', models.CharField(max_length=100)),
                ('s_address', models.CharField(max_length=200)),
                ('s_type', models.CharField(max_length=100)),
                ('s_email', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='tour',
            fields=[
                ('tID', models.CharField(max_length=10, primary_key=True, serialize=False, unique=True)),
                ('booked_date', models.DateField()),
                ('t_description', models.CharField(max_length=200)),
                ('time', models.TimeField()),
                ('cID', models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, to='rock_fort_backend.customer')),
            ],
        ),
        migrations.CreateModel(
            name='tour_offer',
            fields=[
                ('offID', models.CharField(max_length=10, primary_key=True, serialize=False, unique=True)),
                ('description', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='tour_package',
            fields=[
                ('packID', models.CharField(max_length=10, primary_key=True, serialize=False, unique=True)),
                ('pName', models.CharField(max_length=100)),
                ('price', models.FloatField()),
                ('t_type', models.CharField(max_length=100)),
                ('t_details', models.CharField(default='', max_length=600)),
            ],
        ),
        migrations.CreateModel(
            name='tourPay',
            fields=[
                ('tpay_id', models.CharField(max_length=10, primary_key=True, serialize=False, unique=True)),
                ('amount', models.FloatField()),
                ('income_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rock_fort_backend.income')),
                ('tID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rock_fort_backend.tour')),
            ],
        ),
        migrations.AddField(
            model_name='tour',
            name='offID',
            field=models.ForeignKey(default='', null=True, on_delete=django.db.models.deletion.CASCADE, to='rock_fort_backend.tour_offer'),
        ),
        migrations.AddField(
            model_name='tour',
            name='packID',
            field=models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, to='rock_fort_backend.tour_package'),
        ),
        migrations.CreateModel(
            name='task',
            fields=[
                ('taskID', models.AutoField(max_length=10, primary_key=True, serialize=False, unique=True)),
                ('tack_description', models.CharField(max_length=400)),
                ('task', models.CharField(max_length=400)),
                ('time_duration', models.CharField(default=0, max_length=50, validators=[django.core.validators.RegexValidator('^\\d{0,10}$')])),
                ('status', models.CharField(default='', max_length=10)),
                ('emp_name', models.CharField(default='', max_length=100)),
                ('empID', models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, to='rock_fort_backend.employee')),
            ],
        ),
        migrations.CreateModel(
            name='supplier_contact',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('supplierID', models.ForeignKey(max_length=10, on_delete=django.db.models.deletion.CASCADE, to='rock_fort_backend.supplier', unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='salary',
            fields=[
                ('salaryID', models.AutoField(max_length=10, primary_key=True, serialize=False, unique=True)),
                ('basic', models.FloatField()),
                ('epf', models.FloatField()),
                ('ot', models.FloatField()),
                ('totalSalary', models.FloatField()),
                ('employee_name', models.CharField(default='', max_length=100)),
                ('empID', models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, to='rock_fort_backend.employee')),
            ],
        ),
        migrations.CreateModel(
            name='reservationPay',
            fields=[
                ('rpay_id', models.CharField(max_length=10, primary_key=True, serialize=False, unique=True)),
                ('amount', models.FloatField()),
                ('income_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rock_fort_backend.income')),
                ('res_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rock_fort_backend.reservation')),
            ],
        ),
        migrations.AddField(
            model_name='reservation',
            name='ro_id',
            field=models.ForeignKey(default='', on_delete=django.db.models.deletion.DO_NOTHING, to='rock_fort_backend.room_offer'),
        ),
        migrations.AddField(
            model_name='reservation',
            name='room_id',
            field=models.ForeignKey(default='', on_delete=django.db.models.deletion.DO_NOTHING, to='rock_fort_backend.room'),
        ),
        migrations.CreateModel(
            name='order',
            fields=[
                ('orderID', models.CharField(max_length=10, primary_key=True, serialize=False, unique=True)),
                ('s_company', models.CharField(max_length=100)),
                ('s_email', models.CharField(max_length=100)),
                ('date', models.DateTimeField(auto_now=True)),
                ('amount', models.FloatField()),
                ('supplierID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rock_fort_backend.supplier')),
            ],
        ),
        migrations.CreateModel(
            name='item_order',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('itemID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rock_fort_backend.inventory')),
                ('orderID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rock_fort_backend.order')),
            ],
        ),
        migrations.AddField(
            model_name='inventory',
            name='supplierID',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rock_fort_backend.supplier'),
        ),
        migrations.CreateModel(
            name='inquiry',
            fields=[
                ('inquiryID', models.AutoField(max_length=10, primary_key=True, serialize=False, unique=True)),
                ('inq_description', models.CharField(max_length=400)),
                ('empID', models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, to='rock_fort_backend.employee')),
            ],
        ),
        migrations.CreateModel(
            name='expenses',
            fields=[
                ('expensesID', models.CharField(max_length=10, primary_key=True, serialize=False, unique=True)),
                ('refID', models.CharField(max_length=10)),
                ('date_time', models.DateTimeField(auto_now=True)),
                ('budgetID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rock_fort_backend.budget')),
                ('orderID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rock_fort_backend.order')),
            ],
        ),
        migrations.CreateModel(
            name='eventPay',
            fields=[
                ('epay_id', models.CharField(max_length=10, primary_key=True, serialize=False, unique=True)),
                ('amount', models.FloatField()),
                ('eID', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rock_fort_backend.event')),
                ('income_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rock_fort_backend.income')),
            ],
        ),
        migrations.AddField(
            model_name='event',
            name='oID',
            field=models.ForeignKey(default='', null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='rock_fort_backend.event_offer'),
        ),
        migrations.AddField(
            model_name='event',
            name='pID',
            field=models.ForeignKey(default='', null=True, on_delete=django.db.models.deletion.CASCADE, to='rock_fort_backend.event_package'),
        ),
        migrations.CreateModel(
            name='employee_phone',
            fields=[
                ('phoneID', models.AutoField(primary_key=True, serialize=False)),
                ('employee_phone', models.CharField(max_length=10, validators=[django.core.validators.RegexValidator('^\\d{1,10}$')])),
                ('empID', models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, to='rock_fort_backend.employee')),
            ],
        ),
        migrations.CreateModel(
            name='attendance',
            fields=[
                ('attendanceID', models.AutoField(max_length=10, primary_key=True, serialize=False, unique=True)),
                ('on_time', models.TimeField()),
                ('off_time', models.TimeField()),
                ('empID', models.ForeignKey(default='', on_delete=django.db.models.deletion.CASCADE, to='rock_fort_backend.employee')),
            ],
        ),
    ]
